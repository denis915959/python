#        python algoritm.txt
class Mesh:
    def __init__(self, number, led_num, floor, udalennost):#int, int, int, bool
        self.number=number
        self.led_num=led_num
        self.floor=floor
        self.udalennost=udalennost
	
class Signal:
    def __init__(self, led_num, signal_num):#int, int
        self.led_num=led_num
        self.signal_num=signal_num

M=2
N=3
n1=2
n2=1
led_num=12 #количество светодиодов, фиксированное значение
i=0 #счетчик цикла
k=0 #счетчик массива signal
rotate=False
vector=True
vector_stel=False
rotate_num=True

centr=[]#массив номеров центральных светодиодов
mesh=[]
mesh.append(Mesh(0, 1, 1, False))
#mesh.append(Mesh(0, 10, 2, False))
mesh.append(Mesh(0, 0, 0, False))
signal=[]
signal.append(Signal(0, 0))

print(not mesh[0].udalennost)

centr.append(0)
centr.append(n1+1)
j=2
while led_num>(centr[j-1]+N+1):
	centr.append(centr[j-1]+N+1)
	j=j+1
print(centr) #потом убрать

while (mesh[i].led_num!=0):
	if (rotate_num==True):#поворот
		number_row=mesh[i].led_num//(N+1)+1
		if mesh[i].led_num%(N+1)==0:
			number_row=number_row-1
		range1=(number_row-1)*(N+1)+1
		range2=number_row*(N+1)
		j=0
		while ((centr[j]>range2)or(centr[j]<range1)):
			j=j+1
		c=centr[j] #номер центрального светодиода на данной итерации
		print(c)#потом убрать
		#print(range1)
		#print(range2)
		#c=0 
		signal[k].led_num=c
		if (mesh[i].led_num<c):
			if (vector==True):
				signal[k].signal_num=6
				rotate=False #0-влево, 1 - вправо
			else: #vector==false
				signal[k].signal_num=5
				rotate=True #0-влево, 1 - вправо
			vector_stel=False
		if (mesh[i].led_num>c):
			if (vector==True):
				signal[k].signal_num=5
				rotate=True #0-влево, 1 - вправо
			else: #vector==false
				signal[k].signal_num=6
				rotate=False #0-влево, 1 - вправо
			vector_stel=True	
		rotate_num=False #для тестов
		k=k+1
		signal.append(Signal(0, 0))
		#print(signal[0].led_num)
		#print(signal[0].signal_num)
		
	if (rotate_num==False):
		signal[k].led_num=mesh[i].led_num
		if ((mesh[i-1].led_num==mesh[i].led_num)and(i==1)):
			if (mesh[i-1].udalennost==mesh[i].udalennost):
				if (mesh[i].floor==1):
					signal[k].signal_num=9
				if (mesh[i].floor==2):
					signal[k].signal_num=10
				rotate=rotate
			else: #udalennostи не равны
				if (mesh[i].floor==1):
					signal[k].signal_num=11
				if (mesh[i].floor==2):
					signal[k].signal_num=12
				rotate=not(rotate)
		#конец блока "захват с того же светодиода
		else:
			if (vector_stel==False):
				if (mesh[i].udalennost==False):
					if (mesh[i].floor==1):
						signal[k].signal_num=3 #Вправо и захват
					if (mesh[i].floor==2):
						signal[k].signal_num=4 #Вправо и захват
					rotate=True
				else: #udalennost==True
					if (mesh[i].floor==1):
						signal[k].signal_num=1 #Влево и захват
					if (mesh[i].floor==2):
						signal[k].signal_num=2 #Влево и захват
					rotate=False
			#конец блока (v_s==False)

			if (vector_stel==True):
				if (mesh[i].udalennost==False):
					if (mesh[i].floor==1):
						signal[k].signal_num=1 #влево и захват
					if (mesh[i].floor==2):
						signal[k].signal_num=2 #влево и захват
					rotate=False
				else: #udalennost==True
					if (mesh[i].floor==1):
						signal[k].signal_num=3 #вправо и захват
					if (mesh[i].floor==2):
						signal[k].signal_num=4 #вправо и захват
					rotate=True
			#конец блока (v_s==True)
		#конец блока else
		k=k+1
		signal.append(Signal(0, 0))

		#проверяем, входит ли (i+1)-й светодиод в диапазон, найденный ранее 
		if ((mesh[i+1].led_num>=range1)and(mesh[i+1].led_num<=range2)): #входит
			signal[k].led_num=mesh[i].led_num
			if (mesh[i+1].led_num>mesh[i].led_num): #второй ящик находится ПРАВЕЕ первого
				if (vector_stel==False):
					if (rotate==False):
						signal[k].signal_num=6 #Влево 
					else:
						signal[k].signal_num=5 #Вправо
					rotate=rotate
				elif (vector_stel==True):
					if (rotate==False):
						signal[k].signal_num=5 #Вправо
					else:
						signal[k].signal_num=6 #Влево 
					rotate=not(rotate)
				vector_stel=True
				k=k+1
				signal.append(Signal(0, 0))
			#конец блока "второй ящик находится ПРАВЕЕ первого"

			if (mesh[i+1].led_num<mesh[i].led_num): #второй ящик находится Левее первого
				if (vector_stel==False):
					if (rotate==False):
						signal[k].signal_num=5 #Вправо 
					else:
						signal[k].signal_num=6 #Влево
					rotate=not(rotate)
				elif (vector_stel==True):
					if (rotate==False):
						signal[k].signal_num=6 #Влево 
					else:
						signal[k].signal_num=5 #Вправо
					rotate=rotate
				vector_stel=False
				k=k+1
				signal.append(Signal(0, 0))
			#конец блока "второй ящик находится Левее первого"
		#конец блока "входит"

		else:# 2 поворота
			#первый поворот
			signal[k].led_num=mesh[i].led_num
			if(mesh[i].led_num>c):#правее магистрали
				if (vector_stel==False):
					if (rotate==False):#то есть влево   
						signal[k].signal_num=5 #Вправо
					else:       
						signal[k].signal_num=6 #Влево 
					rotate=not(rotate)
				else:
					if (rotate==False):#то есть влево  
						signal[k].signal_num=6 #Влево 
					else:      
						signal[k].signal_num=5 #вправо
					rotate=rotate
				vector_stel=False
			if(mesh[i].led_num<c): #левее магистрали
				if (vector_stel==False):
					if (rotate==False):#то есть влево   
						signal[k].signal_num=6 #Влево 
					else:       
						signal[k].signal_num=5 #Вправо
					rotate=rotate
				else:
					if (rotate==False):#то есть влево  
						signal[k].signal_num=5 #Вправо 
					else:       
						signal[k].signal_num=6 #Влево
					rotate=not(rotate)
				vector_stel=True
			
			k=k+1
			signal.append(Signal(0, 0))

			#второй поворот
			signal[k].led_num=c
			if (mesh[i+1].led_num>range2): #второй ящик дальше от зрителя, чем первый
				vector=True
				if (vector_stel==False):
					signal[k].signal_num=5 #6 Влево
				else:
					signal[k].signal_num=6 #5 Вправо
				rotate=vector_stel
			#конец блока "второй ящик дальше от зрителя, чем первый"
			if (mesh[i+1].led_num<range1): #второй ящик ближе к зрителю, чем первый
				
				vector=False
				if (vector_stel==False):
					signal[k].signal_num=6 #5 Вправо
				else:
					signal[k].signal_num=5 #6 Влево
				rotate=not(vector_stel)
			#конец блока "второй ящик ближе к зрителю, чем первый"
			rotate_num=True
			k=k+1
			signal.append(Signal(0, 0))
		#конец блока "не входит"
	#конец блока "rotate_num==False"
	i=i+1
#конец цикла

print(' ')
for j in range(0, k+1):
	print('led: ', signal[j].led_num)
	#print(signal[j].led_num)
	print('signal: ', signal[j].signal_num)
	#print(signal[j].signal_num)
	print(' ')

	