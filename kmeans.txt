# python kmeans.txt

from sklearn.cluster import KMeans
import numpy as np
import matplotlib.pyplot as plt

mode=3

if(mode==1): #Анизатропные данные, вытянутые вдоль оси. Кластеры определены неверно.
	data = [[1,1],[1,3],[15,3],[3,1],[3,3],[15,1],[5,1],[5,3],[17,3],[7,1],[7,3],[17,1],[9,1],[9,3],[19,1],[11,1],[11,3],[19,3],[13,1],[13,3]]

	labels = np.array(['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20'])
	N_CLUSTERS = 3
	data_x0=[]
	data_y0=[]

	data_x1=[]
	data_y1=[]


	kmeans = KMeans(init='k-means++' , n_clusters=N_CLUSTERS, n_init=40) #, n_clusters=N_CLUSTERS
	kmeans.fit(data)
	pred_classes = kmeans.predict(data)

	for cluster in range(N_CLUSTERS):
		for i in range(len(pred_classes)):
			if(pred_classes[i]==0):
				data_x0.append(data[i][0])
				data_y0.append(data[i][1])
			if(pred_classes[i]==1):
				data_x1.append(data[i][0])
				data_y1.append(data[i][1])


		if(cluster ==0):
			plt.scatter(data_x0,data_y0) 
		if(cluster ==1):
			plt.scatter(data_x1,data_y1) 
		
	plt.show()



if(mode==2):  #неверно выбраны центры кластеров
	data = [[0.8888905, 0.14167127], [-0.69839623, 0.92219331], [0.67612697, -0.70635456], [0.99665955, -0.30254931], [-0.9560689, 0.84635135], [2.0738948, 2.6245627], [1.66291943, 2.81843815], [2.24402979, 2.33011333], [3.82280269, 2.13182102], [3.95972999, 3.08359528], [3.87893023, 3.45993754], [2.55238297, 2.8489884], [0.005, 1.58247631], [0.57406703, 0.49612224], [2.58706116, 5.72916791], [3.15537792, 3.69631766], [3.3280552, 3.06088587], [2.83695518, 3.78757499], [3.27790759, 3.60872688], [-0.92445443, 0.26168298]]
	cluster_centers = [[0, 2],[3, 0]]

	labels = np.array(['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20'])
	N_CLUSTERS = 2
	data_x0=[]
	data_y0=[]

	data_x1=[]
	data_y1=[]	
	kmeans = KMeans(init='k-means++' , n_clusters=N_CLUSTERS, n_init=40) #, n_clusters=N_CLUSTERS
	kmeans.fit(cluster_centers)  #data)
	pred_classes = kmeans.predict(data)

	for cluster in range(N_CLUSTERS):
		for i in range(len(pred_classes)):
			if(pred_classes[i]==0):
				data_x0.append(data[i][0])
				data_y0.append(data[i][1])
			if(pred_classes[i]==1):
				data_x1.append(data[i][0])
				data_y1.append(data[i][1])


		if(cluster ==0):
			plt.scatter(data_x0,data_y0) 
		if(cluster ==1):
			plt.scatter(data_x1,data_y1)
	plt.annotate('Центр 1', xy =(0, 2))  #, xytext =(3, 1.8)) 
	plt.plot(0, 2, marker='*', color="red")
	plt.annotate('Центр 2', xy =(3, 0))
	plt.plot(3, 0, marker='*', color="red")
	plt.show()



if(mode==3): #неверно задано число кластеров
	data = [[1,1],[1,3],[1,4],[3,1],[3,3],[3,5],[5,1],[5,3],[5,5],[11,8],[11,10],[11,12],[11,14],[13,8],[13,10],[13,12],[13,14],[15,10],[15,12],[15,14]]

	labels = np.array(['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20'])
	N_CLUSTERS = 3
	data_x0=[]
	data_y0=[]

	data_x1=[]
	data_y1=[]

	data_x2=[]
	data_y2=[]


	kmeans = KMeans(init='k-means++' , n_clusters=N_CLUSTERS, n_init=40) #, n_clusters=N_CLUSTERS
	kmeans.fit(data)
	pred_classes = kmeans.predict(data)

	for cluster in range(N_CLUSTERS):
		for i in range(len(pred_classes)):
			if(pred_classes[i]==0):
				data_x0.append(data[i][0])
				data_y0.append(data[i][1])
			if(pred_classes[i]==1):
				data_x1.append(data[i][0])
				data_y1.append(data[i][1])
			if(pred_classes[i]==2):
				data_x2.append(data[i][0])
				data_y2.append(data[i][1])



		if(cluster ==0):
			plt.scatter(data_x0,data_y0) 
		if(cluster ==1):
			plt.scatter(data_x1,data_y1) 
		if(cluster ==2):
			plt.scatter(data_x2,data_y2) 
		
	plt.show()

