# python test.txt

a=1
b=a
a=2
print(b)
"""import sys
import codecs #для считывания русских символов
import sqlite3
import copy
import time
import random
from paho.mqtt import client as mqtt_client
from PyQt5.QtWidgets import QApplication, QDesktopWidget, QFileDialog, QVBoxLayout, QMainWindow, QPushButton, QLineEdit, QWidget, QLabel, QGroupBox, QGridLayout, QMenuBar, QAction, QInputDialog, QMessageBox
from PyQt5.QtGui import QFont
from collections import namedtuple

from PyQt5.QtWidgets import QApplication, QDialog, QInputDialog, QMessageBox


class Node:
	def __init__(self, num, branch_arr, flag1):
		self.number=num
		self.branch_array=branch_arr
		self.crossroad=flag1 #True - Перекресток, нет - рядом с ячейками находится
		self.traveled_path=0
		self.previous_node=-1

edge = namedtuple('edge', ['n1', 'n2'])
	
		

from prettytable import PrettyTable

class Test():
	def __init__(self):
		self.path = []
		self.path.append(Node(0, [], True))
		self.path.append(Node(2, [], True))
		self.path.append(Node(5, [], False))
		self.path.append(Node(2, [], True))
		self.path.append(Node(0, [], True))
		#self.sklad = Test()

	def get_crossroad(self, mesh):
		parametr = 0
		return(parametr)

	def calculate_orientation(self, array_answer):
		if(array_answer[0]==0):
			if(array_answer[1].n1==-1):
				k = len(array_answer)-1
				n1 = self.path[array_answer[k].n1].number
				n2 = self.path[array_answer[k].n2].number
			else:
				crossroad = self.sklad.get_crossroad(array_answer[1].n2)
				if(array_answer[1].n2 == self.mesh_arr[0]):
					num_in_mesh_arr = 1
				if((len(self.mesh_arr)==2)and(array_answer[1].n2 == self.mesh_arr[1])):
					num_in_mesh_arr = 2
				count = 0
				sz = len(self.path)
				for i in range(1, sz):
					if(self.path[i].number == crossroad):
						count = count + 1
					if(count == num_in_mesh_arr):
						n1 = self.path[i-1].number
						n2 = self.path[i].number
			delta = n2-n1
			tmp_orient = -1
			if(delta == 1):
				tmp_orient = 2
			if(delta > 1):
				tmp_orient = 1
			if(delta == -1):
				tmp_orient = 4
			if(delta < -1):
				tmp_orient = 3
			if((n1 == 0)or(n2==0)):
				if(delta > 0):
					tmp_orient = 1
				if(delta < 0):
					tmp_orient = 3
				
			print(tmp_orient)

	def save_articuls_into_prettytable(self):
		table = PrettyTable()
		table.field_names = ["Артикул", "Номер ячейки", "Номер столбца"]
		table.add_row(["a1", str(0), str(2)]) # Цикл сюда вставить!
		with open("Артикулы.txt", "w") as file:
			file.write(str(table))


array_answer = [0, edge(1, 2)]
test = Test()
test.save_articuls_into_prettytable()"""

